@import "compass/reset";
*,
*:before,
*:after {
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
}

html,
body {
	height: 100%;
	width: 100%;
	background-color: rgb(26, 26, 26);
	font-family: Verdana, Helvetica, Arial, monospace;
	scroll-behavior: smooth;
	transform-style: preserve-3d;
	-webkit-text-size-adjust: none;
	-webkit-font-smoothing: antialiased !important;
	text-rendering: optimizeLegibility !important;
	-moz-osx-font-smoothing: grayscale;
}

body {
	margin: 0;
}

.container {
	overflow: hidden;
}

footer {
	height: 12rem;
	background: #2b2e3ac2;
	width: 100%;
	top: 0;
	z-index: 2;
	/* padding-top: 2rem; */
}

footer ul {
	display: flex;
	justify-content: center;
	align-items: center;

}
.footer-container {
	display: flex;
	justify-content: center;
	align-items: center;
	height: 100%;
	width:100%;
}
footer ul>li {
	margin-right: 5rem;
	list-style: none;
	font-weight: 700;
	color: #f0f0f0;
	transition: transform 350ms ease-out;
	cursor: pointer;
}

footer ul>li:hover {
	transform: scale3d(1.2, 1.2, 1.2);
}

.hero-halfpage {
	display: flex;
	align-items: center;
	justify-content: center;
	flex-flow: column;
	height: 75vh;
	width: 100%;
	color: #f0f0f0;
	background-color: #282b37;
	padding: 2rem 10rem 2rem 10rem;

}

.hero-halfpage p {
	color: #b8b8b8;
	text-align: justify;
	text-justify: inter-word;
}

.blocks {
	display: grid;
	grid-template-columns: 1fr 1fr;
	grid-template-rows: repeat(3, 100vh);
}

@media(max-width: 936px) {
	.blocks {
		grid-template-columns: 1fr;
		grid-auto-rows: 100vh;
		grid-gap: 0.1rem;
	}
}

.hero-fullscreen {
	height: 100vh;
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: column;
	flex-wrap: wrap;
	background-color: #282b37;
	background-image: url("../images/robot.jpg");
	background-repeat: no-repeat;
	background-size: cover;
	position: relative;

}

.play-button-bg {
	display: flex;
	align-items: center;
	justify-content: center;
	height: 5em;
	width: 5em;
	border-color: #e0e0e0;
	border-style: solid;
	border-radius: 50%;
	z-index: 1;
	transition: transform 1000ms ease, opacity 1000ms 500ms ease;
	transform-origin: center center;
}

.play-button-bg.clicked {
	opacity: 0;
	z-index: 0;
	transform: scale(4);
}

.play-button {
	width: 0;
	height: 0;
	border-style: solid;
	border-width: 14px 0 14px 28px;
	border-color: transparent transparent transparent #ffffff;
	margin: 0 auto;
	transform: translate(2px, 0px);
}

.play-button-bg:hover .play-button {
	border-color: transparent transparent transparent #e01414;
}

.play-button-bg:hover {
	border-color: #e01414;
}

#player {
	width: 75%;
	height: 75%;
	position: absolute;
	z-index: 0;
	margin: 0 auto;
	padding: 0;
	align-self: center;
	justify-self: center;
}

#player>iframe {
	width: 75%;
	height: 75%;
	position: absolute;
	z-index: 0;
}

@media(max-width: 736px) {
	#player {
		height: 60%;
		width: 100%;
	}
}

.player-wrapper {
	position: absolute;
	height: 100%;
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
	background-color: transparent;
	transition: background-color 0.5s ease;
}

.btn-close {
	height: 85%;
	width: 95%;
	display: flex;
	align-content: flex-start;
	justify-content: flex-end;
}

.btn-close span {
	font-size: 3rem;
	color: transparent;
	transition: background-color 0.5s ease;
	cursor: pointer;
}

.block {
	display: flex;
	align-items: center;
	justify-content: start;
	flex-direction: column;
	position: relative;
	width: 100%;
	padding: 4rem;
	color: #282b37;
	background-color: #f0f0f0;
}

.black {
	background-color: #282b37;
	color: #282b37;
}

.block h1 {
	font-size: 3rem;
}

.block p {
	font-size: 1.5rem;
}




/* spunge */

.track {
	/* position: fixed; */
	background: transparent
}

#spunge,
.canvas,
.layer,
.type {
	position: absolute;
}

.canvas,
.type {
	top: 0;
	left: 0;
	width: 500px;
	height: 500px;
	background: #282b37;

}

/* 
.type {
	text-align: center;
	color: #5D7FFF;
	font-weight: 200;
	font-size: 14rem;
	line-height: 100vh
} */
div.wh {
	background-color: white !important;
	/*background-color:#ff9c00 !important;*/
	overflow: hidden;
}

div.bl {
	background-color: #0bc649 !important;
	overflow: hidden;
}

$white: rgba(255,255,255,1);
$blue: #5D7FFF;
$decagons: 48;
$size: 300px;

#spunge {
	top: 50%;
	left: 50%;
	width: 450px;
	height: 450px;
	margin-top: -200px;
	margin-left: -200px;
	transform-origin: center center;
	transform: rotateY(147deg) rotateX(-16deg);
	transform-style: preserve-3d;
}

.layer {
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	transform: rotateX(90deg) translate3D(0, 0, 0);
	-webkit-transform-origin: center;
	will-change: transform
}

.layer .bl,
.layer .wh {
	transform-style: preserve-3d;
	width: 100%;
	height: 100%;
	/*background:url("data:image/svg+xml;utf8,<svg width='309px' height='323px' viewBox='0 0 309 323' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><g stroke='none' stroke-width='0' fill='none' fill-rule='evenodd'><g transform='translate(-431.000000, -205.000000)' fill='white' stroke='white'><polygon id='Polygon' points='585.5 205 680.427318 235.843755 739.095627 316.593755 739.095627 416.406245 680.427318 497.156245 585.5 528 490.572682 497.156245 431.904373 416.406245 431.904373 316.593755 490.572682 235.843755'></polygon></g></g></svg>") center center no-repeat;*/
	animation: rotate360 6s cubic-bezier(.86, 0, .07, 1) infinite
}

.layer .bl {
	/*background:url("data:image/svg+xml;utf8,<svg width='309px' height='323px' viewBox='0 0 309 323' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><g stroke='none' stroke-width='0' fill='none' fill-rule='evenodd'><g transform='translate(-431.000000, -205.000000)' fill='#5D7FFF' stroke='#5D7FFF'><polygon id='Polygon' points='585.5 205 680.427318 235.843755 739.095627 316.593755 739.095627 416.406245 680.427318 497.156245 585.5 528 490.572682 497.156245 431.904373 416.406245 431.904373 316.593755 490.572682 235.843755'></polygon></g></g></svg>") center center no-repeat*/
}

@for $i from 1 through $decagons
{
  $count: $i - 1;
  $posZ: -180+(8px * $count);
  $scale: sin(((pi())/$decagons)*$count);
  $scale2: cos(((pi())/$decagons)*$count);
  @debug $scale;

  .layer:nth-child(#{$i})
  {
    transform: rotateX(0deg) translate3D(0px,0px,$posZ) scale($scale) rotate(0deg);
  }

  .layer:nth-child(#{$i}) > div
  {
    $delay: .04s * $i;
    animation-delay: $delay;
  }
}
